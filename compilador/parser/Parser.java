/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.parser;

import compilador.lexer.*;
import compilador.node.*;
import compilador.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PStart node1 = (PStart) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAstart1Start */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AAstart2Start */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list, false);
            }
            break;
            case 2: /* reduce AAprogramastatement1ProgramaStatement */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list, false);
            }
            break;
            case 3: /* reduce AAprogramastatement2ProgramaStatement */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list, false);
            }
            break;
            case 4: /* reduce AAprogramastatement3ProgramaStatement */
            {
                ArrayList<Object> list = new4();
                push(goTo(1), list, false);
            }
            break;
            case 5: /* reduce AAprogramastatement4ProgramaStatement */
            {
                ArrayList<Object> list = new5();
                push(goTo(1), list, false);
            }
            break;
            case 6: /* reduce AAdeclaracao1Declaracao */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list, false);
            }
            break;
            case 7: /* reduce AAdeclaracao2Declaracao */
            {
                ArrayList<Object> list = new7();
                push(goTo(2), list, false);
            }
            break;
            case 8: /* reduce AIdVar */
            {
                ArrayList<Object> list = new8();
                push(goTo(3), list, false);
            }
            break;
            case 9: /* reduce AVarVar */
            {
                ArrayList<Object> list = new9();
                push(goTo(3), list, false);
            }
            break;
            case 10: /* reduce AEmptyVar */
            {
                ArrayList<Object> list = new10();
                push(goTo(3), list, false);
            }
            break;
            case 11: /* reduce AIdIdentificador */
            {
                ArrayList<Object> list = new11();
                push(goTo(4), list, false);
            }
            break;
            case 12: /* reduce AIdentificador */
            {
                ArrayList<Object> list = new12();
                push(goTo(4), list, false);
            }
            break;
            case 13: /* reduce ANumberValor */
            {
                ArrayList<Object> list = new13();
                push(goTo(5), list, false);
            }
            break;
            case 14: /* reduce ANumberRealValor */
            {
                ArrayList<Object> list = new14();
                push(goTo(5), list, false);
            }
            break;
            case 15: /* reduce AValor */
            {
                ArrayList<Object> list = new15();
                push(goTo(5), list, false);
            }
            break;
            case 16: /* reduce AAatribuicaocomandos1Comandos */
            {
                ArrayList<Object> list = new16();
                push(goTo(6), list, false);
            }
            break;
            case 17: /* reduce AAatribuicaocomandos2Comandos */
            {
                ArrayList<Object> list = new17();
                push(goTo(6), list, false);
            }
            break;
            case 18: /* reduce AAsecomandos1Comandos */
            {
                ArrayList<Object> list = new18();
                push(goTo(6), list, false);
            }
            break;
            case 19: /* reduce AAsecomandos2Comandos */
            {
                ArrayList<Object> list = new19();
                push(goTo(6), list, false);
            }
            break;
            case 20: /* reduce AEnquantoComandos */
            {
                ArrayList<Object> list = new20();
                push(goTo(6), list, false);
            }
            break;
            case 21: /* reduce AMaisExpressao */
            {
                ArrayList<Object> list = new21();
                push(goTo(7), list, false);
            }
            break;
            case 22: /* reduce AMenosExpressao */
            {
                ArrayList<Object> list = new22();
                push(goTo(7), list, false);
            }
            break;
            case 23: /* reduce ATermoExpressao */
            {
                ArrayList<Object> list = new23();
                push(goTo(7), list, false);
            }
            break;
            case 24: /* reduce AMulTermo */
            {
                ArrayList<Object> list = new24();
                push(goTo(8), list, false);
            }
            break;
            case 25: /* reduce ADivTermo */
            {
                ArrayList<Object> list = new25();
                push(goTo(8), list, false);
            }
            break;
            case 26: /* reduce AFatorTermo */
            {
                ArrayList<Object> list = new26();
                push(goTo(8), list, false);
            }
            break;
            case 27: /* reduce AIdFator */
            {
                ArrayList<Object> list = new27();
                push(goTo(9), list, false);
            }
            break;
            case 28: /* reduce AParenFator */
            {
                ArrayList<Object> list = new28();
                push(goTo(9), list, false);
            }
            break;
            case 29: /* reduce AIgualExpressaoLogica */
            {
                ArrayList<Object> list = new29();
                push(goTo(10), list, false);
            }
            break;
            case 30: /* reduce ADiferenteExpressaoLogica */
            {
                ArrayList<Object> list = new30();
                push(goTo(10), list, false);
            }
            break;
            case 31: /* reduce AMenorExpressaoLogica */
            {
                ArrayList<Object> list = new31();
                push(goTo(10), list, false);
            }
            break;
            case 32: /* reduce AMaiorExpressaoLogica */
            {
                ArrayList<Object> list = new32();
                push(goTo(10), list, false);
            }
            break;
            case 33: /* reduce AMenorIgualExpressaoLogica */
            {
                ArrayList<Object> list = new33();
                push(goTo(10), list, false);
            }
            break;
            case 34: /* reduce AMaiorIgualExpressaoLogica */
            {
                ArrayList<Object> list = new34();
                push(goTo(10), list, false);
            }
            break;
            case 35: /* reduce ATermoLogicoExpressaoLogica */
            {
                ArrayList<Object> list = new35();
                push(goTo(10), list, false);
            }
            break;
            case 36: /* reduce AETermoLogico */
            {
                ArrayList<Object> list = new36();
                push(goTo(11), list, false);
            }
            break;
            case 37: /* reduce AOuTermoLogico */
            {
                ArrayList<Object> list = new37();
                push(goTo(11), list, false);
            }
            break;
            case 38: /* reduce AXorTermoLogico */
            {
                ArrayList<Object> list = new38();
                push(goTo(11), list, false);
            }
            break;
            case 39: /* reduce AFatorLogicoTermoLogico */
            {
                ArrayList<Object> list = new39();
                push(goTo(11), list, false);
            }
            break;
            case 40: /* reduce AIdFatorLogico */
            {
                ArrayList<Object> list = new40();
                push(goTo(12), list, false);
            }
            break;
            case 41: /* reduce AParentesesFatorLogico */
            {
                ArrayList<Object> list = new41();
                push(goTo(12), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAstart1Start */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PStart pstartNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;

        pstartNode1 = new AStart(null);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAstart2Start */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStart pstartNode1;
        {
            // Block
        PProgramaStatement pprogramastatementNode2;
        pprogramastatementNode2 = (PProgramaStatement)nodeArrayList1.get(0);

        pstartNode1 = new AStart(pprogramastatementNode2);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAprogramastatement1ProgramaStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramaStatement pprogramastatementNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TId tidNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TInicio tinicioNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        TFim tfimNode7;
        TPonto tpontoNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tinicioNode5 = (TInicio)nodeArrayList3.get(0);
        tfimNode7 = (TFim)nodeArrayList4.get(0);
        tpontoNode8 = (TPonto)nodeArrayList5.get(0);

        pprogramastatementNode1 = new AProgramaStatement(tprogramaNode2, tidNode3, null, tinicioNode5, null, tfimNode7, tpontoNode8);
        }
	nodeList.add(pprogramastatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAprogramastatement2ProgramaStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramaStatement pprogramastatementNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TId tidNode3;
        PDeclaracao pdeclaracaoNode4;
        TInicio tinicioNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        TFim tfimNode7;
        TPonto tpontoNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        pdeclaracaoNode4 = (PDeclaracao)nodeArrayList3.get(0);
        tinicioNode5 = (TInicio)nodeArrayList4.get(0);
        tfimNode7 = (TFim)nodeArrayList5.get(0);
        tpontoNode8 = (TPonto)nodeArrayList6.get(0);

        pprogramastatementNode1 = new AProgramaStatement(tprogramaNode2, tidNode3, pdeclaracaoNode4, tinicioNode5, null, tfimNode7, tpontoNode8);
        }
	nodeList.add(pprogramastatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AAprogramastatement3ProgramaStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramaStatement pprogramastatementNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TId tidNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TInicio tinicioNode5;
        PComandos pcomandosNode6;
        TFim tfimNode7;
        TPonto tpontoNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tinicioNode5 = (TInicio)nodeArrayList3.get(0);
        pcomandosNode6 = (PComandos)nodeArrayList4.get(0);
        tfimNode7 = (TFim)nodeArrayList5.get(0);
        tpontoNode8 = (TPonto)nodeArrayList6.get(0);

        pprogramastatementNode1 = new AProgramaStatement(tprogramaNode2, tidNode3, null, tinicioNode5, pcomandosNode6, tfimNode7, tpontoNode8);
        }
	nodeList.add(pprogramastatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AAprogramastatement4ProgramaStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramaStatement pprogramastatementNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TId tidNode3;
        PDeclaracao pdeclaracaoNode4;
        TInicio tinicioNode5;
        PComandos pcomandosNode6;
        TFim tfimNode7;
        TPonto tpontoNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        pdeclaracaoNode4 = (PDeclaracao)nodeArrayList3.get(0);
        tinicioNode5 = (TInicio)nodeArrayList4.get(0);
        pcomandosNode6 = (PComandos)nodeArrayList5.get(0);
        tfimNode7 = (TFim)nodeArrayList6.get(0);
        tpontoNode8 = (TPonto)nodeArrayList7.get(0);

        pprogramastatementNode1 = new AProgramaStatement(tprogramaNode2, tidNode3, pdeclaracaoNode4, tinicioNode5, pcomandosNode6, tfimNode7, tpontoNode8);
        }
	nodeList.add(pprogramastatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AAdeclaracao1Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TTipo ttipoNode3;
        TDoisPontos tdoispontosNode4;
        PVar pvarNode5;
        TSemicolon tsemicolonNode6;
        ttipoNode3 = (TTipo)nodeArrayList1.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList2.get(0);
        pvarNode5 = (PVar)nodeArrayList3.get(0);
        tsemicolonNode6 = (TSemicolon)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new ADeclaracao(null, ttipoNode3, tdoispontosNode4, pvarNode5, tsemicolonNode6);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AAdeclaracao2Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PDeclaracao pdeclaracaoNode2;
        TTipo ttipoNode3;
        TDoisPontos tdoispontosNode4;
        PVar pvarNode5;
        TSemicolon tsemicolonNode6;
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList1.get(0);
        ttipoNode3 = (TTipo)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        pvarNode5 = (PVar)nodeArrayList4.get(0);
        tsemicolonNode6 = (TSemicolon)nodeArrayList5.get(0);

        pdeclaracaoNode1 = new ADeclaracao(pdeclaracaoNode2, ttipoNode3, tdoispontosNode4, pvarNode5, tsemicolonNode6);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AIdVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        PVar pvarNode2;
        PIdentificador pidentificadorNode3;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        pidentificadorNode3 = (PIdentificador)nodeArrayList2.get(0);

        pvarNode1 = new AIdVar(pvarNode2, pidentificadorNode3);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AVarVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        PVar pvarNode2;
        TVirgula tvirgulaNode3;
        PIdentificador pidentificadorNode4;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pidentificadorNode4 = (PIdentificador)nodeArrayList3.get(0);

        pvarNode1 = new AVarVar(pvarNode2, tvirgulaNode3, pidentificadorNode4);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AEmptyVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PVar pvarNode1;
        {
            // Block

        pvarNode1 = new AEmptyVar();
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AIdIdentificador */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificador pidentificadorNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pidentificadorNode1 = new AIdIdentificador(tidNode2);
        }
	nodeList.add(pidentificadorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AIdentificador */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificador pidentificadorNode1;
        {
            // Block
        TIdVar tidvarNode2;
        tidvarNode2 = (TIdVar)nodeArrayList1.get(0);

        pidentificadorNode1 = new AIdentificador(tidvarNode2);
        }
	nodeList.add(pidentificadorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ANumberValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumber tnumberNode2;
        tnumberNode2 = (TNumber)nodeArrayList1.get(0);

        pvalorNode1 = new ANumberValor(tnumberNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ANumberRealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumberReal tnumberrealNode2;
        tnumberrealNode2 = (TNumberReal)nodeArrayList1.get(0);

        pvalorNode1 = new ANumberRealValor(tnumberrealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAatribuicaocomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PIdentificador pidentificadorNode3;
        TAtribuicao tatribuicaoNode4;
        PValor pvalorNode5;
        TSemicolon tsemicolonNode6;
        pidentificadorNode3 = (PIdentificador)nodeArrayList1.get(0);
        tatribuicaoNode4 = (TAtribuicao)nodeArrayList2.get(0);
        pvalorNode5 = (PValor)nodeArrayList3.get(0);
        tsemicolonNode6 = (TSemicolon)nodeArrayList4.get(0);

        pcomandosNode1 = new AAtribuicaoComandos(null, pidentificadorNode3, tatribuicaoNode4, pvalorNode5, tsemicolonNode6);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAatribuicaocomandos2Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        PIdentificador pidentificadorNode3;
        TAtribuicao tatribuicaoNode4;
        PValor pvalorNode5;
        TSemicolon tsemicolonNode6;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        pidentificadorNode3 = (PIdentificador)nodeArrayList2.get(0);
        tatribuicaoNode4 = (TAtribuicao)nodeArrayList3.get(0);
        pvalorNode5 = (PValor)nodeArrayList4.get(0);
        tsemicolonNode6 = (TSemicolon)nodeArrayList5.get(0);

        pcomandosNode1 = new AAtribuicaoComandos(pcomandosNode2, pidentificadorNode3, tatribuicaoNode4, pvalorNode5, tsemicolonNode6);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAsecomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TSe tseNode3;
        PExpressaoLogica pexpressaologicaNode4;
        TEntao tentaoNode5;
        tseNode3 = (TSe)nodeArrayList1.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList2.get(0);
        tentaoNode5 = (TEntao)nodeArrayList3.get(0);

        pcomandosNode1 = new ASeComandos(null, tseNode3, pexpressaologicaNode4, tentaoNode5);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AAsecomandos2Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        TSe tseNode3;
        PExpressaoLogica pexpressaologicaNode4;
        TEntao tentaoNode5;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        tseNode3 = (TSe)nodeArrayList2.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList3.get(0);
        tentaoNode5 = (TEntao)nodeArrayList4.get(0);

        pcomandosNode1 = new ASeComandos(pcomandosNode2, tseNode3, pexpressaologicaNode4, tentaoNode5);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AEnquantoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TFaca tfacaNode3;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tfacaNode3 = (TFaca)nodeArrayList2.get(0);

        pcomandosNode1 = new AEnquantoComandos(tenquantoNode2, tfacaNode3);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AMaisExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TMais tmaisNode3;
        PTermo ptermoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tmaisNode3 = (TMais)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpressaoNode1 = new AMaisExpressao(pexpressaoNode2, tmaisNode3, ptermoNode4);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AMenosExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TMenos tmenosNode3;
        PTermo ptermoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpressaoNode1 = new AMenosExpressao(pexpressaoNode2, tmenosNode3, ptermoNode4);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce ATermoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpressaoNode1 = new ATermoExpressao(ptermoNode2);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AMulTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        TEstrela testrelaNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        testrelaNode3 = (TEstrela)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new AMulTermo(ptermoNode2, testrelaNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce ADivTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        TBarra tbarraNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tbarraNode3 = (TBarra)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new ADivTermo(ptermoNode2, tbarraNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AFatorTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new AFatorTermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AIdFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PIdentificador pidentificadorNode2;
        pidentificadorNode2 = (PIdentificador)nodeArrayList1.get(0);

        pfatorNode1 = new AIdFator(pidentificadorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AParenFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TParD tpardNode2;
        PExpressao pexpressaoNode3;
        TParE tpareNode4;
        tpardNode2 = (TParD)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList2.get(0);
        tpareNode4 = (TParE)nodeArrayList3.get(0);

        pfatorNode1 = new AParenFator(tpardNode2, pexpressaoNode3, tpareNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AIgualExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        TIgual tigualNode3;
        PTermoLogico ptermologicoNode4;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        tigualNode3 = (TIgual)nodeArrayList2.get(0);
        ptermologicoNode4 = (PTermoLogico)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AIgualExpressaoLogica(pexpressaologicaNode2, tigualNode3, ptermologicoNode4);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce ADiferenteExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        TDiferente tdiferenteNode3;
        PTermoLogico ptermologicoNode4;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        tdiferenteNode3 = (TDiferente)nodeArrayList2.get(0);
        ptermologicoNode4 = (PTermoLogico)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new ADiferenteExpressaoLogica(pexpressaologicaNode2, tdiferenteNode3, ptermologicoNode4);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AMenorExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        TMenor tmenorNode3;
        PTermoLogico ptermologicoNode4;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        tmenorNode3 = (TMenor)nodeArrayList2.get(0);
        ptermologicoNode4 = (PTermoLogico)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AMenorExpressaoLogica(pexpressaologicaNode2, tmenorNode3, ptermologicoNode4);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AMaiorExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        TMaior tmaiorNode3;
        PTermoLogico ptermologicoNode4;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        tmaiorNode3 = (TMaior)nodeArrayList2.get(0);
        ptermologicoNode4 = (PTermoLogico)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AMaiorExpressaoLogica(pexpressaologicaNode2, tmaiorNode3, ptermologicoNode4);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AMenorIgualExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        TMenorIgual tmenorigualNode3;
        PTermoLogico ptermologicoNode4;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        tmenorigualNode3 = (TMenorIgual)nodeArrayList2.get(0);
        ptermologicoNode4 = (PTermoLogico)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AMenorIgualExpressaoLogica(pexpressaologicaNode2, tmenorigualNode3, ptermologicoNode4);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AMaiorIgualExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        TMaiorIgual tmaiorigualNode3;
        PTermoLogico ptermologicoNode4;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        tmaiorigualNode3 = (TMaiorIgual)nodeArrayList2.get(0);
        ptermologicoNode4 = (PTermoLogico)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AMaiorIgualExpressaoLogica(pexpressaologicaNode2, tmaiorigualNode3, ptermologicoNode4);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ATermoLogicoExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PTermoLogico ptermologicoNode2;
        ptermologicoNode2 = (PTermoLogico)nodeArrayList1.get(0);

        pexpressaologicaNode1 = new ATermoLogicoExpressaoLogica(ptermologicoNode2);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AETermoLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoLogico ptermologicoNode1;
        {
            // Block
        PTermoLogico ptermologicoNode2;
        TE teNode3;
        PFatorLogico pfatorlogicoNode4;
        ptermologicoNode2 = (PTermoLogico)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        pfatorlogicoNode4 = (PFatorLogico)nodeArrayList3.get(0);

        ptermologicoNode1 = new AETermoLogico(ptermologicoNode2, teNode3, pfatorlogicoNode4);
        }
	nodeList.add(ptermologicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AOuTermoLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoLogico ptermologicoNode1;
        {
            // Block
        PTermoLogico ptermologicoNode2;
        TOu touNode3;
        PFatorLogico pfatorlogicoNode4;
        ptermologicoNode2 = (PTermoLogico)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        pfatorlogicoNode4 = (PFatorLogico)nodeArrayList3.get(0);

        ptermologicoNode1 = new AOuTermoLogico(ptermologicoNode2, touNode3, pfatorlogicoNode4);
        }
	nodeList.add(ptermologicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AXorTermoLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoLogico ptermologicoNode1;
        {
            // Block
        PTermoLogico ptermologicoNode2;
        TXor txorNode3;
        PFatorLogico pfatorlogicoNode4;
        ptermologicoNode2 = (PTermoLogico)nodeArrayList1.get(0);
        txorNode3 = (TXor)nodeArrayList2.get(0);
        pfatorlogicoNode4 = (PFatorLogico)nodeArrayList3.get(0);

        ptermologicoNode1 = new AXorTermoLogico(ptermologicoNode2, txorNode3, pfatorlogicoNode4);
        }
	nodeList.add(ptermologicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AFatorLogicoTermoLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoLogico ptermologicoNode1;
        {
            // Block
        PFatorLogico pfatorlogicoNode2;
        pfatorlogicoNode2 = (PFatorLogico)nodeArrayList1.get(0);

        ptermologicoNode1 = new AFatorLogicoTermoLogico(pfatorlogicoNode2);
        }
	nodeList.add(ptermologicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AIdFatorLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorLogico pfatorlogicoNode1;
        {
            // Block
        PIdentificador pidentificadorNode2;
        pidentificadorNode2 = (PIdentificador)nodeArrayList1.get(0);

        pfatorlogicoNode1 = new AIdFatorLogico(pidentificadorNode2);
        }
	nodeList.add(pfatorlogicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AParentesesFatorLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorLogico pfatorlogicoNode1;
        {
            // Block
        TParD tpardNode2;
        PExpressaoLogica pexpressaologicaNode3;
        TParE tpareNode4;
        tpardNode2 = (TParD)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList2.get(0);
        tpareNode4 = (TParE)nodeArrayList3.get(0);

        pfatorlogicoNode1 = new AParentesesFatorLogico(tpardNode2, pexpressaologicaNode3, tpareNode4);
        }
	nodeList.add(pfatorlogicoNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 0}, {0, SHIFT, 1}, },
			{{-1, ERROR, 1}, {45, SHIFT, 4}, },
			{{-1, ERROR, 2}, {55, ACCEPT, -1}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 4}, {1, SHIFT, 5}, {19, SHIFT, 6}, },
			{{-1, ERROR, 5}, {2, SHIFT, 8}, {3, SHIFT, 9}, {5, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 6}, {41, SHIFT, 15}, },
			{{-1, ERROR, 7}, {1, SHIFT, 16}, {19, SHIFT, 17}, },
			{{-1, ERROR, 8}, {43, SHIFT, 18}, },
			{{-1, ERROR, 9}, {14, SHIFT, 19}, },
			{{-1, ERROR, 10}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 13}, {38, SHIFT, 25}, },
			{{-1, ERROR, 14}, {2, SHIFT, 26}, {5, SHIFT, 27}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 16}, {2, SHIFT, 30}, {3, SHIFT, 9}, {5, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 17}, {41, SHIFT, 32}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 20}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 22}, {6, SHIFT, 34}, {28, SHIFT, 35}, {29, SHIFT, 36}, {30, SHIFT, 37}, {31, SHIFT, 38}, {32, SHIFT, 39}, {33, SHIFT, 40}, },
			{{-1, REDUCE, 35}, {34, SHIFT, 41}, {35, SHIFT, 42}, {36, SHIFT, 43}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 25}, {47, SHIFT, 44}, {48, SHIFT, 45}, {49, SHIFT, 46}, },
			{{-1, ERROR, 26}, {43, SHIFT, 48}, },
			{{-1, ERROR, 27}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 28}, {38, SHIFT, 50}, },
			{{-1, ERROR, 29}, {42, SHIFT, 51}, {44, SHIFT, 52}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 30}, {43, SHIFT, 54}, },
			{{-1, ERROR, 31}, {2, SHIFT, 55}, {5, SHIFT, 27}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 33}, {25, SHIFT, 57}, {28, SHIFT, 35}, {29, SHIFT, 36}, {30, SHIFT, 37}, {31, SHIFT, 38}, {32, SHIFT, 39}, {33, SHIFT, 40}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 35}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 36}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 37}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 38}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 39}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 40}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 41}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 42}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, ERROR, 43}, {24, SHIFT, 20}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 47}, {42, SHIFT, 67}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 49}, {6, SHIFT, 68}, {28, SHIFT, 35}, {29, SHIFT, 36}, {30, SHIFT, 37}, {31, SHIFT, 38}, {32, SHIFT, 39}, {33, SHIFT, 40}, },
			{{-1, ERROR, 50}, {47, SHIFT, 44}, {48, SHIFT, 45}, {49, SHIFT, 46}, },
			{{-1, REDUCE, 6}, },
			{{-1, ERROR, 52}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 55}, {43, SHIFT, 71}, },
			{{-1, ERROR, 56}, {42, SHIFT, 72}, {44, SHIFT, 52}, {45, SHIFT, 11}, {46, SHIFT, 12}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 29}, {34, SHIFT, 41}, {35, SHIFT, 42}, {36, SHIFT, 43}, },
			{{-1, REDUCE, 30}, {34, SHIFT, 41}, {35, SHIFT, 42}, {36, SHIFT, 43}, },
			{{-1, REDUCE, 32}, {34, SHIFT, 41}, {35, SHIFT, 42}, {36, SHIFT, 43}, },
			{{-1, REDUCE, 31}, {34, SHIFT, 41}, {35, SHIFT, 42}, {36, SHIFT, 43}, },
			{{-1, REDUCE, 33}, {34, SHIFT, 41}, {35, SHIFT, 42}, {36, SHIFT, 43}, },
			{{-1, REDUCE, 34}, {34, SHIFT, 41}, {35, SHIFT, 42}, {36, SHIFT, 43}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 69}, {42, SHIFT, 73}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 17}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 7}, },
			{{-1, 29}, {32, 56}, },
			{{-1, 21}, {5, 13}, {14, 28}, {16, 13}, {29, 53}, {31, 28}, {52, 70}, {56, 53}, },
			{{-1, 47}, {50, 69}, },
			{{-1, 14}, {16, 31}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, 22}, {20, 33}, {27, 49}, },
			{{-1, 23}, {35, 58}, {36, 59}, {37, 60}, {38, 61}, {39, 62}, {40, 63}, },
			{{-1, 24}, {41, 64}, {42, 65}, {43, 66}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa', EOF",
			"expecting: id",
			"expecting: EOF",
			"expecting: 'inicio', tipo",
			"expecting: 'fim', 'enquanto', 'se', id, id var",
			"expecting: ':'",
			"expecting: '.'",
			"expecting: 'faca'",
			"expecting: '(', id, id var",
			"expecting: 'entao', ')', '=', '<>', '>', '<', '<=', '>=', 'e', 'ou', 'xor', ':=', ';', ',', id, id var",
			"expecting: ':='",
			"expecting: 'fim', 'se', id, id var",
			"expecting: ';', ',', id, id var",
			"expecting: 'entao', ')', '=', '<>', '>', '<', '<=', '>=', 'e', 'ou', 'xor'",
			"expecting: 'entao', '=', '<>', '>', '<', '<=', '>='",
			"expecting: number, number real, string",
			"expecting: ')', '=', '<>', '>', '<', '<=', '>='",
			"expecting: ';'",
			"expecting: id, id var",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 2, 3, 4, 5, 3, 6, 7, 8, 9, 9, 10, 11, 12, 4, 5, 2, 11, 8, 13, 14, 13, 13, 15, 6, 8, 10, 12, 6, 11, 12, 16, 11, 8, 8, 8, 8, 8, 8, 8, 8, 8, 17, 17, 17, 17, 2, 14, 15, 3, 18, 12, 2, 6, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 17, 12, 2, 3, 11, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
